using System;
using System.Collections.Generic;
using System.Data;
using System.Data.OleDb;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using PDK1API.Engine.PDK1API;

namespace PDK1API.Controllers
{
    [ApiController]
    [Route("[controller]")]
    public class WeatherForecastController : ControllerBase
    {
        private static readonly string[] Summaries = new[]
        {
            "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching"
        };

        private readonly ILogger<WeatherForecastController> _logger;

        public WeatherForecastController(ILogger<WeatherForecastController> logger)
        {
            _logger = logger;
        }

        [HttpGet]
        public IEnumerable<WeatherForecast> Get()
        {
            var rng = new Random();

            string FilePath = "D:\\backup";

            var currentDirectory = System.IO.Directory.GetCurrentDirectory();

            string conString = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + FilePath + ";Extended Properties=dBASE IV;";

            string DBF_FileName = "STOCK.dbf";
            DBF_FileName = "PRODDM";

            OleDbConnection conn = new OleDbConnection(conString);

            OleDbCommand command = new OleDbCommand("select * from " + DBF_FileName, conn);
            conn.Open();

            /*Load data to table*/

            DataTable dt1 = new DataTable();
            dt1.Load(command.ExecuteReader());


            return Enumerable.Range(1, 5).Select(index => new WeatherForecast
            {
                Date = DateTime.Now.AddDays(index),
                TemperatureC = rng.Next(-20, 55),
                Summary = Summaries[rng.Next(Summaries.Length)]
            })
            .ToArray();
        }
    }
}
